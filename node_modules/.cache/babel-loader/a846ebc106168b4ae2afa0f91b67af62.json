{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n    getNotes {\\n        content\\n        title\\n    }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nconst GET_BOOKS = gql(_templateObject());\n\nconst GetNotes = () => React.createElement(Query, {\n  query: GET_BOOKS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Bye Bye Amit Arya...\");\n  console.log(data);\n  if (data) return data.map(({\n    title,\n    content\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Notes title \", title, \" \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Notes content \", content, \" \")));\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"My First Apollo Client App\"), React.createElement(GetNotes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js"],"names":["React","ReactDOM","ApolloClient","ApolloProvider","Query","gql","client","uri","GET_BOOKS","GetNotes","loading","error","data","console","log","map","title","content","App"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,cAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;AAIA,MAAMC,SAAS,GAAGH,GAAH,mBAAf;;AAQA,MAAMI,QAAQ,GAAE,MACZ,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAID,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,CAAC;AAACE,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAA4B;AACxB,MAAGF,OAAH,EAAY,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR;AACZ,MAAGC,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACVE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAGA,IAAH,EAAS,OAAOA,IAAI,CAACG,GAAL,CAAS,CAAC;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT,GAAD,KACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBD,KAAjB,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBC,OAAlB,MAFA,CADY,CAAP;AAMZ,CAZL,CADJ;;AAkBA,MAAMC,GAAG,GAAE,MACH,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAIZ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADA,CADR;;AASA,eAAeY,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/\"\n});\n\nconst GET_BOOKS = gql`\n{\n    getNotes {\n        content\n        title\n    }\n}`;\n\nconst GetNotes =() => (\n    <Query query = {GET_BOOKS}>\n    {\n        ({loading ,error , data}) =>{\n            if(loading) return  <p>Loading...</p>;\n            if(error) return <p>Bye Bye Amit Arya...</p>\n            console.log(data)\n            if(data) return data.map(({title , content}) =>(\n                <div>\n                <h3>Notes title {title} </h3>\n                <p>Notes content {content} </p>\n                </div>\n            ));\n        }}\n\n    </Query>\n)\n\nconst App =() => (\n        <ApolloProvider client = {client}>\n        <div>\n            <h2>My First Apollo Client App</h2>\n            <GetNotes/>\n        </div>\n        </ApolloProvider>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}