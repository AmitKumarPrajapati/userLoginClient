{"ast":null,"code":"var _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/componets/CreateNote/CreateNote.js\";\nimport React, { Component } from 'react';\nimport { StyledNote } from './styles';\nimport { CREATE_NOTE } from '../../query';\nimport { Mutation } from 'react-apollo';\n\nclass CreateNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayAlert = res => {\n      window.alert(\"Note Added Successfully\", res);\n    };\n\n    this.handleSubmit = () => {\n      this.setState(state => ({\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      }));\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      });\n    };\n\n    this.updateNote = () => {\n      if (this.props.location.state) {\n        this.setState({\n          isUpdate: true\n        });\n        console.log('Hello World----------->>>>>>>>>>.');\n      }\n\n      return null;\n    };\n\n    this.onKeyUp = (target, event) => {\n      if (event.keyCode === 13) {\n        switch (target) {\n          case 'title':\n            this.content.focus();\n            break;\n\n          case 'content':\n            this.author.focus();\n            break;\n\n          case 'author':\n            this.place.focus();\n            break;\n\n          case 'place':\n            this.submit.focus();\n            break;\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.state = {\n      title: '',\n      content: '',\n      author: '',\n      place: '',\n      isUpdate: false\n    };\n  } // componentWillReceiveProps(nextProps){\n  //     if(nextProps.state !== this.props.state){\n  //         this.setState({\n  //             isUpdate: nextProps.state.location.isUpdate\n  //         });\n  //     }\n  // }\n  // static getDerivedFromProps(prevProps,prevState){\n  //     if()\n  //         return {isUpdate : props.location.state.isUpdate}\n  //     }\n  //     console.log(\"Hello Amit Arya------------->>>>>>>>>>>>\",this.state.isUpdate)\n  // }\n  // componentWillMount(){\n  //     if(this.props.location.state){\n  //         this.updateNote();\n  //     }\n  //     return null;\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          content = _this$state.content,\n          author = _this$state.author,\n          place = _this$state.place;\n    const submitNote = \"Submit Note\";\n    const updateNote = \"Update Note\";\n    const submitButtonText = \"\";\n    console.log('Hello------->>>>>>>>>>>>', this.props.location.state);\n    console.log(\"Helllo AMit ARya How Are You\", this.state.isUpdate);\n    return React.createElement(StyledNote, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Title: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"55px\"\n      },\n      placeholder: \"Enter note title\",\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handleChange,\n      value: this.state.title,\n      ref: input => {\n        this.title = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"Content: \", React.createElement(\"input\", {\n      placeholder: \"Enter note content\",\n      type: \"text\",\n      name: \"content\",\n      onChange: this.handleChange,\n      value: this.state.content,\n      ref: input => {\n        this.content = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'content'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Author: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"40px\"\n      },\n      placeholder: \"Enter note author\",\n      type: \"text\",\n      name: \"author\",\n      onChange: this.handleChange,\n      value: this.state.author,\n      ref: input => {\n        this.author = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'author'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), \"Place: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"50px\"\n      },\n      placeholder: \"Enter note place\",\n      type: \"text\",\n      name: \"place\",\n      onChange: this.handleChange,\n      value: this.state.place,\n      ref: input => {\n        this.place = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'place'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Mutation, {\n      mutation: CREATE_NOTE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, createNote => React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit-btn\",\n      ref: input => {\n        this.submit = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'submit'),\n      disabled: !(title && content && author && place),\n      onClick: () => {\n        this.handleSubmit();\n        createNote({\n          variables: {\n            title,\n            content,\n            author,\n            place\n          }\n        }).then(res => this.displayAlert(res)).catch(err => console.log(\"Error\", err));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Submit Note\")), React.createElement(\"button\", {\n      className: \"reset-btn\",\n      type: \"button\",\n      onClick: this.handleReset,\n      disabled: !(title || content || author || place),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nexport default CreateNote;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/componets/CreateNote/CreateNote.js"],"names":["React","Component","StyledNote","CREATE_NOTE","Mutation","CreateNote","constructor","props","displayAlert","res","window","alert","handleSubmit","setState","state","title","content","author","place","handleChange","evt","target","name","value","handleReset","updateNote","location","isUpdate","console","log","onKeyUp","event","keyCode","focus","submit","render","submitNote","submitButtonText","marginLeft","input","bind","createNote","variables","then","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyledNote } from './styles';\nimport { CREATE_NOTE } from '../../query'\nimport { Mutation } from 'react-apollo'\n\nclass CreateNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            author: '',\n            place: '',\n            isUpdate: false,\n        }\n    }\n\n    // componentWillReceiveProps(nextProps){\n    //     if(nextProps.state !== this.props.state){\n    //         this.setState({\n    //             isUpdate: nextProps.state.location.isUpdate\n    //         });\n    //     }\n    // }\n    // static getDerivedFromProps(prevProps,prevState){\n    //     if()\n    //         return {isUpdate : props.location.state.isUpdate}\n    //     }\n    //     console.log(\"Hello Amit Arya------------->>>>>>>>>>>>\",this.state.isUpdate)\n    // }\n    \n    // componentWillMount(){\n    //     if(this.props.location.state){\n    //         this.updateNote();\n    //     }\n    //     return null;\n    // }\n\n    displayAlert = (res) => {\n        window.alert(\"Note Added Successfully\", res);\n    }\n\n    handleSubmit = () => {\n        this.setState(state => ({\n            title: '',\n            content: '',\n            author: '',\n            place: '',\n        }));\n    }\n\n    handleChange = (evt) => {\n        this.setState({ [evt.target.name]: evt.target.value });\n    }\n\n    handleReset = () => {\n        this.setState({\n            title: '',\n            content: '',\n            author: '',\n            place: ''\n        });\n    }\n\n    updateNote = ()=>{\n            if(this.props.location.state)\n            {\n                this.setState({isUpdate: true})\n                console.log('Hello World----------->>>>>>>>>>.');\n            }\n            return null;\n    }\n\n    onKeyUp = (target, event) => {\n        if (event.keyCode === 13) {\n            switch (target) {\n                case 'title': this.content.focus();\n                break;\n                case 'content': this.author.focus();\n                break;\n                case 'author': this.place.focus();\n                break;\n                case 'place': this.submit.focus();\n                break;\n                default: return null;\n            }\n        }\n    }\n\n    render() {\n        const { title, content, author, place } = this.state;\n        const submitNote = \"Submit Note\";\n        const updateNote = \"Update Note\";\n        const submitButtonText = \"\";\n        console.log('Hello------->>>>>>>>>>>>',this.props.location.state);\n        console.log(\"Helllo AMit ARya How Are You\",this.state.isUpdate);\n        return (\n            <StyledNote>\n                <div className=\"note\">\n                    Title: <input\n                        style={{ marginLeft: \"55px\" }}\n                        placeholder=\"Enter note title\"\n                        type=\"text\"\n                        name=\"title\"\n                        onChange={this.handleChange}\n                        value={this.state.title}\n                        ref={(input) => { this.title = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'title')}\n                    /><br />\n                    Content: <input\n                        placeholder=\"Enter note content\"\n                        type=\"text\"\n                        name=\"content\"\n                        onChange={this.handleChange}\n                        value={this.state.content}\n                        ref={(input) => { this.content = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'content')}\n                    /><br />\n                    Author: <input\n                        style={{ marginLeft: \"40px\" }}\n                        placeholder=\"Enter note author\"\n                        type=\"text\"\n                        name=\"author\"\n                        onChange={this.handleChange}\n                        value={this.state.author}\n                        ref={(input) => { this.author = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'author')}\n                    /><br />\n                    Place: <input\n                        style={{ marginLeft: \"50px\" }}\n                        placeholder=\"Enter note place\"\n                        type=\"text\"\n                        name=\"place\"\n                        onChange={this.handleChange}\n                        value={this.state.place}\n                        ref={(input) => { this.place = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'place')}\n                    /><br />\n\n                    <Mutation mutation={CREATE_NOTE}>{\n                        createNote => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.submit = input }}\n                                onKeyUp={this.onKeyUp.bind(this, 'submit')}\n                                disabled={!(title && content && author && place)}\n                                onClick={() => {\n                                    this.handleSubmit();\n                                    createNote({ variables: { title, content, author, place } })\n                                        .then(res => this.displayAlert(res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }}>Submit Note</button>\n                        )\n                    }\n                    </Mutation>\n                    <button\n                        className=\"reset-btn\"\n                        type=\"button\"\n                        onClick={this.handleReset}\n                        disabled={!(title || content || author || place)}\n                    >Reset</button>\n                </div>\n            </StyledNote>\n        );\n    }\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}