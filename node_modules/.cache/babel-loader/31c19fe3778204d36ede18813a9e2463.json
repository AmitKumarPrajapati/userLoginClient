{"ast":null,"code":"var _jsxFileName = \"/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx\";\nimport React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo';\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState(state => ({\n        name: '',\n        password: ''\n      }));\n    };\n\n    this.userLoginSuccess = res => {\n      console.log(\"login user\", res); // const { userName, password } = this.state;\n\n      if (res.status === 200) {\n        console.log(\"User login successfully\");\n      }\n\n      console.log(\"Please enter correct user name & password\");\n    };\n\n    this.state = {\n      name: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          password = _this$state.password;\n    console.log(\"Hello---------------->>>>\", name);\n    console.log(\"Hello------------->>>>>>>>>.\", password);\n    return React.createElement(StyledUserLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), \"Password:\", \" \", React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.handlePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: USER_LOGIN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, userLogin => React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit-btn\",\n      ref: input => {\n        this.login = input;\n      },\n      disabled: !(name && password),\n      onClick: () => {\n        userLogin({\n          variables: {\n            name,\n            password\n          }\n        }).then(res => this.userLoginSuccess(res)).catch(err => console.log(\"Error\", err));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"button\", {\n      className: \"forget-btn\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Forget Password\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx"],"names":["React","Component","StyledUserLogin","Query","USER_LOGIN","Mutation","UserLogin","constructor","props","handleUserName","event","setState","name","target","value","handlePassword","password","handleSubmit","state","userLoginSuccess","res","console","log","status","render","marginLeft","userLogin","input","login","variables","then","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo'\n\n\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", password: \"\" };\n  }\n  handleUserName = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleSubmit = () => {\n    this.setState(state => ({\n        name: '',\n        password: '',\n    }));\n}\n\nuserLoginSuccess = res => {\n    console.log(\"login user\", res)\n    // const { userName, password } = this.state;\n    if(res.status === 200){\n      console.log(\"User login successfully\");\n    }\n    console.log(\"Please enter correct user name & password\");\n}\n  \n\n  render() {\n    const {name,password} = this.state;    \n    console.log(\"Hello---------------->>>>\",name);\n    console.log(\"Hello------------->>>>>>>>>.\",password);  \n            return (\n              <StyledUserLogin>\n                <div className=\"note\">\n                  Username: <input type=\"text\" onChange={this.handleUserName} />{\" \"}\n                  <br />\n                  Password:{\" \"}\n                  <input type=\"password\" onChange={this.handlePassword} />{\" \"}\n                  <br />\n                  <div style={{ marginLeft: \"100px\" }}>\n                  <Mutation mutation={USER_LOGIN}>{\n                        userLogin => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.login = input }}\n                                disabled={!(name && password)}\n                                onClick={() => {\n                                    userLogin({ variables: { name, password } })\n                                        .then(res => this.userLoginSuccess(res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }\n                              }>Login</button>\n                        )\n                    }\n                    </Mutation>\n                    <button className=\"forget-btn\" type=\"button\">\n                      Forget Password\n                    </button>\n                  </div>\n                </div>\n              </StyledUserLogin>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}