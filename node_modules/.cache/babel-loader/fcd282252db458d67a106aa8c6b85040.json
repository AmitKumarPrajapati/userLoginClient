{"ast":null,"code":"var _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js\";\nimport React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport GET_BOOKS from './query';\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nconst GetNotes = () => React.createElement(Query, {\n  query: GET_BOOKS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Bye Bye Amit Arya...\");\n  console.log(data);\n  if (data) return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Content\")), data.getNotes.map(note => React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, note.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, note.content))))));\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"My First Apollo Client App\"), React.createElement(GetNotes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Query","GET_BOOKS","client","uri","GetNotes","loading","error","data","console","log","getNotes","map","note","title","content","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,cAAtC;AACA,OAAOC,SAAP,MAAsB,SAAtB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;;AAIA,MAAMC,QAAQ,GAAG,MACb,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEH,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ,CAAC;AAAEI,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIA,IAAJ,EAAU,OACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,EAMQA,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAmBC,IAAD,IACd,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,OAAV,CAFJ,CADJ,CADJ,CANR,CADJ,CADM;AAoBb,CA1BT,CADJ;;AAgCA,MAAMC,GAAG,GAAG,MACR,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEb,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ;;AASA,eAAea,GAAf","sourcesContent":["import React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport GET_BOOKS from './query';\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/\"\n});\n\nconst GetNotes = () => (\n    <Query query={GET_BOOKS}>\n        {\n            ({ loading, error, data }) => {\n                if (loading) return <p>Loading...</p>;\n                if (error) return <p>Bye Bye Amit Arya...</p>\n                console.log(data)\n                if (data) return (\n                    <React.Fragment>\n                        <table>\n                            <tr>\n                                <th>Title</th>\n                                <th>Content</th>\n                            </tr>\n                            {\n                                data.getNotes.map((note) => (\n                                    <>\n                                        <tr>\n                                            <td>{note.title}</td>\n                                            <td>{note.content}</td>\n                                        </tr>\n                                    </>\n                                ))\n                            }\n                        </table>\n                    </React.Fragment>\n                )\n            }}\n\n    </Query>\n)\n\nconst App = () => (\n    <ApolloProvider client={client}>\n        <div>\n            <h2>My First Apollo Client App</h2>\n            <GetNotes />\n        </div>\n    </ApolloProvider>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}