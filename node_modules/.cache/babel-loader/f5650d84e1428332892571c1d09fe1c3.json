{"ast":null,"code":"var _jsxFileName = \"/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/ViewAllNotes/ViewAllNotes.jsx\";\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { GET_BOOKS, DELETE_NOTE } from \"../../query\";\nimport { StyledTable } from \"./styles\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass ViewAllNotes extends Component {\n  render() {\n    return React.createElement(Query, {\n      query: GET_BOOKS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Error...\");\n      console.log(data.getNotes);\n\n      if (data) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(StyledTable, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          className: \"table\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Title\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Content\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Author\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Place\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Action\")), data.getNotes.map(note => React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, note.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, note.content), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, note.author), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, note.place), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: \"action\",\n          to: {\n            pathname: '/createNote',\n            state: {\n              note,\n              isUpdate: true\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Mutation, {\n          mutation: CREATE_NOTE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, createNote => React.createElement(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          ref: input => {\n            this.submit = input;\n          },\n          onKeyUp: this.onKeyUp.bind(this, 'submit'),\n          disabled: !(title && content && author && place),\n          onClick: () => {\n            this.handleSubmit();\n            createNote({\n              variables: {\n                title,\n                content,\n                author,\n                place\n              }\n            }).then(res => console.log(\"hellloooooooooo---------\", res)).catch(err => console.log(\"Error\", err));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, submitButtonText)))))))));\n      }\n    });\n  }\n\n}\n\nexport default ViewAllNotes;","map":{"version":3,"sources":["/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/ViewAllNotes/ViewAllNotes.jsx"],"names":["React","Component","Query","GET_BOOKS","DELETE_NOTE","StyledTable","BrowserRouter","Router","Route","Link","ViewAllNotes","render","loading","error","data","console","log","getNotes","map","note","title","content","author","place","pathname","state","isUpdate","CREATE_NOTE","createNote","input","submit","onKeyUp","bind","handleSubmit","variables","then","res","catch","err","submitButtonText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport {GET_BOOKS,DELETE_NOTE} from \"../../query\";\nimport { StyledTable } from \"./styles\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass ViewAllNotes extends Component {\n  render() {\n    return (\n      <Query query={GET_BOOKS}>\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error...</p>;\n          console.log(data.getNotes);\n          if (data) {\n            return (\n              <React.Fragment>\n                <StyledTable>\n                  <table className=\"table\">\n                    <tr>\n                      <th>Title</th>\n                      <th>Content</th>\n                      <th>Author</th>\n                      <th>Place</th>\n                      <th>Action</th>\n                    </tr>\n                    {data.getNotes.map(note => (\n                      <>\n                        <tr>\n                          <td>{note.title}</td>\n                          <td>{note.content}</td>\n                          <td>{note.author}</td>\n                          <td>{note.place}</td>\n                          <td>\n                            <Link className=\"action\" to={{pathname:'/createNote',state:{ note, isUpdate: true}}}>Edit</Link>\n                            <Mutation mutation={CREATE_NOTE}>{\n                        createNote => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.submit = input }}\n                                onKeyUp={this.onKeyUp.bind(this, 'submit')}\n                                disabled={!(title && content && author && place)}\n                                onClick={() => {\n                                    this.handleSubmit();\n                                    createNote({ variables: { title, content, author, place } })\n                                        .then(res => console.log(\"hellloooooooooo---------\",res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }}>{submitButtonText}</button>\n                        )\n                    }\n                    </Mutation>\n                          </td>\n                        </tr>\n                      </>\n                    ))}\n                  </table>\n                </StyledTable>\n              </React.Fragment>\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default ViewAllNotes;\n"]},"metadata":{},"sourceType":"module"}