{"ast":null,"code":"var _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js\";\nimport React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport GET_BOOKS from './query';\nimport { notStrictEqual } from 'assert';\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nconst GetNotes = () => React.createElement(Query, {\n  query: GET_BOOKS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Bye Bye Amit Arya...\");\n  console.log(data.getNotes);\n  if (data) return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Content\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Author\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Place\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Action\")), data.getNotes.map(note => React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, note.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, note.title), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, note.content), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, note.author), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, note.place), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Delete\")))))));\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Welcome to notes section\"), React.createElement(GetNotes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Query","GET_BOOKS","notStrictEqual","client","uri","GetNotes","loading","error","data","console","log","getNotes","map","note","id","title","content","author","place","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,cAAtC;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,cAAT,QAA+B,QAA/B;AAGA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC5BM,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;;AAIA,MAAMC,QAAQ,GAAG,MACb,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAEJ,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ,CAAC;AAAEK,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,QAAjB;AACA,MAAIH,IAAJ,EAAU,OACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CADJ,EAUQA,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAmBC,IAAD,IACd,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,EAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,KAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,OAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACI,MAAV,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,IAAI,CAACK,KAAV,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,CANJ,CADJ,CADJ,CAVR,CADJ,CADM;AA4Bb,CAlCT,CADJ;;AAwCA,MAAMC,GAAG,GAAG,MACR,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ;;AASA,eAAegB,GAAf","sourcesContent":["import React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport GET_BOOKS from './query';\nimport { notStrictEqual } from 'assert';\n\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/\"\n});\n\nconst GetNotes = () => (\n    <Query query={GET_BOOKS}>\n        {\n            ({ loading, error, data }) => {\n                if (loading) return <p>Loading...</p>;\n                if (error) return <p>Bye Bye Amit Arya...</p>\n                console.log(data.getNotes)\n                if (data) return (\n                    <React.Fragment>\n                        <table className=\"table\" >\n                            <tr>\n                                <td>Id</td>\n                                <th>Title</th>\n                                <th>Content</th>\n                                <th>Author</th>\n                                <th>Place</th>\n                                <th>Action</th>\n                            </tr>\n                            {\n                                data.getNotes.map((note) => (\n                                    <>\n                                        <tr>\n                                            <td>{note.id}</td>\n                                            <td>{note.title}</td>\n                                            <td>{note.content}</td>\n                                            <td>{note.author}</td>\n                                            <td>{note.place}</td>\n                                            <td><button>Edit</button><button>Delete</button></td>\n                                        </tr>\n                                    </>\n                                ))\n                            }\n                        </table>\n                    </React.Fragment>\n                )\n            }}\n\n    </Query>\n)\n\nconst App = () => (\n    <ApolloProvider client={client}>\n        <div>\n            <h2>Welcome to notes section</h2>\n            <GetNotes />\n        </div>\n    </ApolloProvider>\n);\n\nexport default App;"]},"metadata":{},"sourceType":"module"}