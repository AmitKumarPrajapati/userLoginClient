{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n    getNotes {\\n        content\\n        title\\n    }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nconst GET_BOOKS = gql(_templateObject());\n\nconst GetNotes = () => React.createElement(Query, {\n  query: GET_BOOKS,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Bye Bye Amit Arya...\");\n  console.log(data);\n  if (data) return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Content\"))));\n});\n\nconst App = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"My First Apollo Client App\"), React.createElement(GetNotes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})));\n\nexport default App;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Query","gql","client","uri","GET_BOOKS","GetNotes","loading","error","data","console","log","App"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,cAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;AAIA,MAAMC,SAAS,GAAGH,GAAH,mBAAf;;AAQA,MAAMI,QAAQ,GAAG,MACb,oBAAC,KAAD;AAAO,EAAA,KAAK,EAAED,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQ,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIA,IAAJ,EAAU,OACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CADJ,CADR,CADM;AAUL,CAhBjB,CADJ;;AAsBgB,MAAMG,GAAG,GAAG,MACR,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAET,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADJ,CADJ;;AASA,eAAeS,GAAf","sourcesContent":["import React from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:4000/\"\n});\n\nconst GET_BOOKS = gql`\n{\n    getNotes {\n        content\n        title\n    }\n}`;\n\nconst GetNotes = () => (\n    <Query query={GET_BOOKS}>\n        {\n            ({ loading, error, data }) => {\n                if (loading) return <p>Loading...</p>;\n                if (error) return <p>Bye Bye Amit Arya...</p>\n                console.log(data)\n                if (data) return (\n                    <React.Fragment>\n                            <table>\n                                <tr>\n                                    <th>Title</th>\n                                    <th>Content</th>\n                                </tr>\n                            </table>\n                </React.Fragment>\n                        )\n                    }}\n            \n    </Query>\n                )\n\n                const App = () => (\n                    <ApolloProvider client={client}>\n                        <div>\n                            <h2>My First Apollo Client App</h2>\n                            <GetNotes />\n                        </div>\n                    </ApolloProvider>\n                );\n\n                export default App;"]},"metadata":{},"sourceType":"module"}