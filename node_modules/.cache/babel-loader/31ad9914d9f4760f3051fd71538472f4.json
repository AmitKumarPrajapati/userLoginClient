{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createUser(\\n      $name: String!,\\n      $age: String!,\\n      $email: String!,\\n      $password: String!,) {\\n    createNote(\\n        name: $name,\\n        age: $age,\\n        email: $email,\\n        password $password,\\n    ){\\n        name\\n        age\\n        email\\n        password\\n    }\\n}\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation createNote(\\n      $title: String!,\\n      $content: String!,\\n      $author: String!,\\n      $place: String!,) {\\n    createNote(\\n        title: $title,\\n        content: $content,\\n        author: $author,\\n        place: $place,\\n    ){\\n        title\\n        content\\n        author\\n        place\\n    }\\n  }\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n    getNotes {\\n        title\\n        content\\n        author\\n        place\\n    }\\n}\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nconst GET_BOOKS = gql(_templateObject());\nconst CREATE_NOTE = gql(_templateObject2());\nconst CREATE_USER = gql(_templateObject3());\nexport { GET_BOOKS, CREATE_NOTE, CREATE_USER };","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/query.js"],"names":["gql","GET_BOOKS","CREATE_NOTE","CREATE_USER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAGD,GAAH,mBAAf;AASA,MAAME,WAAW,GAAGF,GAAH,oBAAjB;AAmBA,MAAMG,WAAW,GAAGH,GAAH,oBAAjB;AAmBA,SAASC,SAAT,EAAmBC,WAAnB,EAA+BC,WAA/B","sourcesContent":["import gql from \"graphql-tag\";\n\nconst GET_BOOKS = gql`{\n    getNotes {\n        title\n        content\n        author\n        place\n    }\n}`;\n\nconst CREATE_NOTE = gql`\n  mutation createNote(\n      $title: String!,\n      $content: String!,\n      $author: String!,\n      $place: String!,) {\n    createNote(\n        title: $title,\n        content: $content,\n        author: $author,\n        place: $place,\n    ){\n        title\n        content\n        author\n        place\n    }\n  }`;\n\nconst CREATE_USER = gql`\n  mutation createUser(\n      $name: String!,\n      $age: String!,\n      $email: String!,\n      $password: String!,) {\n    createNote(\n        name: $name,\n        age: $age,\n        email: $email,\n        password $password,\n    ){\n        name\n        age\n        email\n        password\n    }\n}`;\n\nexport { GET_BOOKS,CREATE_NOTE,CREATE_USER };"]},"metadata":{},"sourceType":"module"}