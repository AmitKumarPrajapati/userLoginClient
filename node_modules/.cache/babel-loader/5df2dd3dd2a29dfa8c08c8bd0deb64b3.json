{"ast":null,"code":"var _jsxFileName = \"/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx\";\nimport React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { CREATE_NOTE } from \"../../query\";\nimport { Mutation, Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { GET_USERS } from \"../../query\";\nimport gql from \"graphql-tag\";\nimport { tsRestType } from \"@babel/types\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:8002/\"\n});\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleUserLogin = data => {\n      console.log(\"hey I am the data--------------------->>>>>>>>>>>>>.\", data);\n      const _this$state = this.state,\n            userName = _this$state.userName,\n            password = _this$state.password;\n      console.log(data.getUsers);\n\n      if (data.getUsers.some(user => user.email === userName && user.password === password)) {\n        alert(\"User loggedin successfully\");\n        window.location.href = '/home';\n      } else {\n        alert(\"Please enter correct username and password\");\n      }\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userName = _this$state2.userName,\n          password = _this$state2.password;\n    return React.createElement(Query, {\n      query: GET_USERS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Error...\");\n\n      if (data) {\n        console.log(data);\n        return React.createElement(StyledUserLogin, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"note\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Username: \", React.createElement(\"input\", {\n          type: \"text\",\n          onChange: this.handleUserName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), \"Password:\", \" \", React.createElement(\"input\", {\n          type: \"password\",\n          onChange: this.handlePassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            marginLeft: \"100px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.handleUserLogin(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Login\"), React.createElement(\"button\", {\n          className: \"forget-btn\",\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Forget Password\"))));\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx"],"names":["React","Component","StyledUserLogin","CREATE_NOTE","Mutation","Query","ApolloClient","GET_USERS","gql","tsRestType","client","uri","UserLogin","constructor","props","handleUserName","event","setState","userName","target","value","handlePassword","password","handleUserLogin","data","console","log","state","getUsers","some","user","email","alert","window","location","href","render","loading","error","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { CREATE_NOTE } from \"../../query\";\nimport { Mutation, Query } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { GET_USERS } from \"../../query\";\nimport gql from \"graphql-tag\";\nimport { tsRestType } from \"@babel/types\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:8002/\"\n});\n\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { userName: \"\", password: \"\" };\n  }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n  // componentDidMount() {\n  //   this.handleUserLogin();\n  // }\n\n\n  handleUserLogin = (data)=>{\n    console.log(\"hey I am the data--------------------->>>>>>>>>>>>>.\",data);\n    const {userName, password} = this.state;\n    console.log(data.getUsers)\n    \n    if(data.getUsers.some(user => (user.email === userName && user.password === password))){\n      alert(\"User loggedin successfully\");\n      window.location.href = '/home';\n    }else{\n      alert(\"Please enter correct username and password\");\n  }\n  }\n\n  render() {\n    const { userName, password } = this.state;\n    return (\n      <Query query={GET_USERS}>\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error...</p>;\n          if (data) {\n            console.log(data)\n            return (\n              <StyledUserLogin>\n                <div className=\"note\">\n                  Username: <input type=\"text\" onChange={this.handleUserName} />{\" \"}\n                  <br />\n                  Password:{\" \"}\n                  <input type=\"password\" onChange={this.handlePassword} />{\" \"}\n                  <br />\n                  <div style={{ marginLeft: \"100px\" }}>\n                    <button onClick={()=>this.handleUserLogin(data)}>Login</button>\n                    <button className=\"forget-btn\" type=\"button\">\n                      Forget Password\n                    </button>\n                  </div>\n                </div>\n              </StyledUserLogin>\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}