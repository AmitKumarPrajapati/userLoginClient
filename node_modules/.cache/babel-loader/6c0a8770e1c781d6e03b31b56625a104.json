{"ast":null,"code":"var _jsxFileName = \"/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx\";\nimport React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo';\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleUserLogin = data => {\n      console.log(\"login user\", data);\n      const _this$state = this.state,\n            userName = _this$state.userName,\n            password = _this$state.password;\n\n      if (data.getUsers.some(user => user.name === userName && user.password === password)) {\n        alert(\"User loggedin successfully\");\n        window.location.href = \"/viewUsers\";\n      } else {\n        alert(\"Please enter correct username and password\");\n      }\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userName = _this$state2.userName,\n          password = _this$state2.password;\n    return React.createElement(Query, {\n      query: GET_USERS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Error...\");\n\n      if (data) {\n        console.log(data);\n        return React.createElement(StyledUserLogin, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"note\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Username: \", React.createElement(\"input\", {\n          type: \"text\",\n          onChange: this.handleUserName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), \"Password:\", \" \", React.createElement(\"input\", {\n          type: \"password\",\n          onChange: this.handlePassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            marginLeft: \"100px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Mutation, {\n          mutation: USER_LOGIN,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, createNote => React.createElement(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          ref: input => {\n            this.login = input;\n          },\n          onKeyUp: this.onKeyUp.bind(this, 'submit'),\n          disabled: !(name && password),\n          onClick: () => {\n            this.handleSubmit();\n            createNote({\n              variables: {\n                name,\n                password\n              }\n            }).then(res => console.log(\"hellloooooooooo---------\", res)).catch(err => console.log(\"Error\", err));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Login\")), React.createElement(\"button\", {\n          className: \"forget-btn\",\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Forget Password\"))));\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx"],"names":["React","Component","StyledUserLogin","Query","USER_LOGIN","Mutation","UserLogin","constructor","props","handleUserName","event","setState","userName","target","value","handlePassword","password","handleUserLogin","data","console","log","state","getUsers","some","user","name","alert","window","location","href","render","GET_USERS","loading","error","marginLeft","createNote","input","login","onKeyUp","bind","handleSubmit","variables","then","res","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo'\n\n\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { userName: \"\", password: \"\" };\n  }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleUserLogin = data => {\n    console.log(\"login user\", data)\n    const { userName, password } = this.state;\n    if (\n      data.getUsers.some(\n        user => user.name === userName && user.password === password\n      )\n    ) {\n      alert(\"User loggedin successfully\");\n      window.location.href = \"/viewUsers\";\n    } else {\n      alert(\"Please enter correct username and password\");\n    }\n  };\n\n  render() {\n    const {userName,password} = this.state;\n    return (\n      <Query query={GET_USERS}>\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error...</p>;\n          if (data) {\n            console.log(data);\n            return (\n              <StyledUserLogin>\n                <div className=\"note\">\n                  Username: <input type=\"text\" onChange={this.handleUserName} />{\" \"}\n                  <br />\n                  Password:{\" \"}\n                  <input type=\"password\" onChange={this.handlePassword} />{\" \"}\n                  <br />\n                  <div style={{ marginLeft: \"100px\" }}>\n                  <Mutation mutation={USER_LOGIN}>{\n                        createNote => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.login = input }}\n                                onKeyUp={this.onKeyUp.bind(this, 'submit')}\n                                disabled={!(name && password)}\n                                onClick={() => {\n                                    this.handleSubmit();\n                                    createNote({ variables: { name, password } })\n                                        .then(res => console.log(\"hellloooooooooo---------\",res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }}>Login</button>\n                        )\n                    }\n                    </Mutation>\n                    <button className=\"forget-btn\" type=\"button\">\n                      Forget Password\n                    </button>\n                  </div>\n                </div>\n              </StyledUserLogin>\n            );\n          }\n        }}\n      </Query>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}