{"ast":null,"code":"var _jsxFileName = \"/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/componets/CreateNote/CreateNote.js\";\nimport React, { Component } from 'react';\nimport { StyledNote } from './styles';\nimport { CREATE_NOTE } from '../../query';\nimport { Mutation } from 'react-apollo';\n\nclass CreateNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayAlert = res => {\n      window.alert(\"Note Added Successfully\", res);\n    };\n\n    this.handleSubmit = () => {\n      this.setState(state => ({\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      }));\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        note: {\n          [evt.target.name]: evt.target.value\n        }\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      });\n    };\n\n    this.onKeyUp = (target, event) => {\n      if (event.keyCode === 13) {\n        switch (target) {\n          case 'title':\n            this.content.focus();\n            break;\n\n          case 'content':\n            this.author.focus();\n            break;\n\n          case 'author':\n            this.place.focus();\n            break;\n\n          case 'place':\n            this.submit.focus();\n            break;\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.state = {\n      note: {\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      },\n      isUpdate: ''\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.location.state !== prevState) {\n      console.log('heyyyyyyyyyyyyyyyy----------->>>>>>>>>>>', nextProps.location.state);\n      console.log('heyyyyyyyyyyyyyyyyyy---------------->>>>>>>>>>>>', prevState);\n      return console.log(\"Props had been changed\");\n    }\n\n    return null;\n  }\n\n  render() {\n    const state = this.props.location.state;\n    const _this$state$note = this.state.note,\n          title = _this$state$note.title,\n          content = _this$state$note.content,\n          author = _this$state$note.author,\n          place = _this$state$note.place;\n\n    const _ref = this.props.location.state || {},\n          _ref$isUpdate = _ref.isUpdate,\n          isUpdate = _ref$isUpdate === void 0 ? false : _ref$isUpdate;\n\n    const submitButtonText = isUpdate ? \"Update Note\" : \"Submit Note\";\n    return React.createElement(StyledNote, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Title: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"55px\"\n      },\n      placeholder: \"Enter note title\",\n      type: \"text\",\n      name: \"title\",\n      onChange: this.handleChange,\n      value: title,\n      ref: input => {\n        this.title = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Content: \", React.createElement(\"input\", {\n      placeholder: \"Enter note content\",\n      type: \"text\",\n      name: \"content\",\n      onChange: this.handleChange,\n      value: content,\n      ref: input => {\n        this.content = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'content'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Author: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"40px\"\n      },\n      placeholder: \"Enter note author\",\n      type: \"text\",\n      name: \"author\",\n      onChange: this.handleChange,\n      value: author,\n      ref: input => {\n        this.author = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'author'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \"Place: \", React.createElement(\"input\", {\n      style: {\n        marginLeft: \"50px\"\n      },\n      placeholder: \"Enter note place\",\n      type: \"text\",\n      name: \"place\",\n      onChange: this.handleChange,\n      value: place,\n      ref: input => {\n        this.place = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'place'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Mutation, {\n      mutation: CREATE_NOTE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, createNote => React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit-btn\",\n      ref: input => {\n        this.submit = input;\n      },\n      onKeyUp: this.onKeyUp.bind(this, 'submit'),\n      disabled: !(title && content && author && place),\n      onClick: () => {\n        this.handleSubmit();\n        createNote({\n          variables: {\n            title,\n            content,\n            author,\n            place\n          }\n        }).then(res => this.displayAlert(res)).catch(err => console.log(\"Error\", err));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, submitButtonText)), React.createElement(\"button\", {\n      className: \"reset-btn\",\n      type: \"button\",\n      onClick: this.handleReset,\n      disabled: !(title || content || author || place),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nexport default CreateNote;","map":{"version":3,"sources":["/home/clone/Desktop/Projects/FullStack_developement/new-notes-apollo-client/src/componets/CreateNote/CreateNote.js"],"names":["React","Component","StyledNote","CREATE_NOTE","Mutation","CreateNote","constructor","props","displayAlert","res","window","alert","handleSubmit","setState","state","title","content","author","place","handleChange","evt","note","target","name","value","handleReset","onKeyUp","event","keyCode","focus","submit","isUpdate","getDerivedStateFromProps","nextProps","prevState","location","console","log","render","submitButtonText","marginLeft","input","bind","createNote","variables","then","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyledNote } from './styles';\nimport { CREATE_NOTE } from '../../query'\nimport { Mutation } from 'react-apollo'\n\nclass CreateNote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            note:{ \n            title: '',\n            content: '',\n            author: '',\n            place: '',\n            },\n            isUpdate: '',\n\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.location.state !== prevState){\n            console.log('heyyyyyyyyyyyyyyyy----------->>>>>>>>>>>',nextProps.location.state);\n            console.log('heyyyyyyyyyyyyyyyyyy---------------->>>>>>>>>>>>',prevState);\n          return console.log(\"Props had been changed\")\n        }\n        return null;\n    }\n\n    displayAlert = (res) => {\n        window.alert(\"Note Added Successfully\", res);\n    }\n\n    handleSubmit = () => {\n        this.setState(state => ({\n            title: '',\n            content: '',\n            author: '',\n            place: '',\n        }));\n    }\n\n    handleChange = (evt) => {\n        this.setState({ note: {[evt.target.name]: evt.target.value }});\n    }\n\n    handleReset = () => {\n        this.setState({\n            title: '',\n            content: '',\n            author: '',\n            place: ''\n        });\n    }\n\n    onKeyUp = (target, event) => {\n        if (event.keyCode === 13) {\n            switch (target) {\n                case 'title': this.content.focus();\n                break;\n                case 'content': this.author.focus();\n                break;\n                case 'author': this.place.focus();\n                break;\n                case 'place': this.submit.focus();\n                break;\n                default: return null;\n            }\n        }\n    }\n\n    render() {\n        const state = this.props.location.state;\n        const { title, content, author, place } = this.state.note;\n        const { isUpdate = false } = this.props.location.state || {};\n        const submitButtonText = isUpdate ? \"Update Note\" : \"Submit Note\";\n        return (\n            <StyledNote>\n                <div className=\"note\">\n                    Title: <input\n                        style={{ marginLeft: \"55px\" }}\n                        placeholder=\"Enter note title\"\n                        type=\"text\"\n                        name=\"title\"\n                        onChange={this.handleChange}\n                        value={title}\n                        ref={(input) => { this.title = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'title')}\n                    /><br />\n                    Content: <input\n                        placeholder=\"Enter note content\"\n                        type=\"text\"\n                        name=\"content\"\n                        onChange={this.handleChange}\n                        value={content}\n                        ref={(input) => { this.content = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'content')}\n                    /><br />\n                    Author: <input\n                        style={{ marginLeft: \"40px\" }}\n                        placeholder=\"Enter note author\"\n                        type=\"text\"\n                        name=\"author\"\n                        onChange={this.handleChange}\n                        value={author}\n                        ref={(input) => { this.author = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'author')}\n                    /><br />\n                    Place: <input\n                        style={{ marginLeft: \"50px\" }}\n                        placeholder=\"Enter note place\"\n                        type=\"text\"\n                        name=\"place\"\n                        onChange={this.handleChange}\n                        value={place}\n                        ref={(input) => { this.place = input }}\n                        onKeyUp={this.onKeyUp.bind(this, 'place')}\n                    /><br />\n\n                    <Mutation mutation={CREATE_NOTE}>{\n                        createNote => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.submit = input }}\n                                onKeyUp={this.onKeyUp.bind(this, 'submit')}\n                                disabled={!(title && content && author && place)}\n                                onClick={() => {\n                                    this.handleSubmit();\n                                    createNote({ variables: { title, content, author, place } })\n                                        .then(res => this.displayAlert(res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }}>{submitButtonText}</button>\n                        )\n                    }\n                    </Mutation>\n                    <button\n                        className=\"reset-btn\"\n                        type=\"button\"\n                        onClick={this.handleReset}\n                        disabled={!(title || content || author || place)}\n                    >Reset</button>\n                </div>\n            </StyledNote>\n        );\n    }\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}