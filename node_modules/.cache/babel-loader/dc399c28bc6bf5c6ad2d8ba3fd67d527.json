{"ast":null,"code":"var _jsxFileName = \"/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx\";\nimport React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo';\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserName = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.handlePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.setState(state => ({\n        title: '',\n        content: '',\n        author: '',\n        place: ''\n      }));\n    };\n\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n\n  // handleSubmit = data => {\n  //   console.log(\"login user\", data)\n  //   const { userName, password } = this.state;\n  //   if (\n  //     data.getUsers.some(\n  //       user => user.name === userName && user.password === password\n  //     )\n  //   ) {\n  //     alert(\"User loggedin successfully\");\n  //     window.location.href = \"/viewUsers\";\n  //   } else {\n  //     alert(\"Please enter correct username and password\");\n  //   }\n  // };\n  render() {\n    const _this$state = this.state,\n          userName = _this$state.userName,\n          password = _this$state.password;\n    return React.createElement(StyledUserLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Username: \", React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"Password:\", \" \", React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.handlePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: USER_LOGIN,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, userLogin => React.createElement(\"button\", {\n      type: \"button\",\n      className: \"submit-btn\",\n      ref: input => {\n        this.login = input;\n      },\n      disabled: !(userName && password),\n      onClick: () => {\n        // this.handleSubmit();\n        userLogin({\n          variables: {\n            userName,\n            password\n          }\n        }).then(res => console.log(\"hellloooooooooo---------\", res)).catch(err => console.log(\"Error\", err));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"button\", {\n      className: \"forget-btn\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Forget Password\"))));\n  }\n\n}","map":{"version":3,"sources":["/home/clone/Projects/FullStack_developement/new-notes-apollo-client/src/componets/UserLogin/UserLogin.jsx"],"names":["React","Component","StyledUserLogin","Query","USER_LOGIN","Mutation","UserLogin","constructor","props","handleUserName","event","setState","userName","target","value","handlePassword","password","handleSubmit","state","title","content","author","place","render","marginLeft","userLogin","input","login","variables","then","res","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { StyledUserLogin } from \"./styles\";\nimport { Query } from \"react-apollo\";\nimport { USER_LOGIN } from \"../../query\";\nimport { Mutation } from 'react-apollo'\n\n\nexport default class UserLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { userName: \"\", password: \"\" };\n  }\n  handleUserName = event => {\n    this.setState({ userName: event.target.value });\n  };\n\n  handlePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleSubmit = () => {\n    this.setState(state => ({\n        title: '',\n        content: '',\n        author: '',\n        place: '',\n    }));\n}\n\n  // handleSubmit = data => {\n  //   console.log(\"login user\", data)\n  //   const { userName, password } = this.state;\n  //   if (\n  //     data.getUsers.some(\n  //       user => user.name === userName && user.password === password\n  //     )\n  //   ) {\n  //     alert(\"User loggedin successfully\");\n  //     window.location.href = \"/viewUsers\";\n  //   } else {\n  //     alert(\"Please enter correct username and password\");\n  //   }\n  // };\n\n  render() {\n    const {userName,password} = this.state;      \n            return (\n              <StyledUserLogin>\n                <div className=\"note\">\n                  Username: <input type=\"text\" onChange={this.handleUserName} />{\" \"}\n                  <br />\n                  Password:{\" \"}\n                  <input type=\"password\" onChange={this.handlePassword} />{\" \"}\n                  <br />\n                  <div style={{ marginLeft: \"100px\" }}>\n                  <Mutation mutation={USER_LOGIN}>{\n                        userLogin => (\n                            <button type=\"button\"\n                                className=\"submit-btn\"\n                                ref={(input) => { this.login = input }}\n                                disabled={!(userName && password)}\n                                onClick={() => {\n                                    // this.handleSubmit();\n                                    userLogin({ variables: { userName, password } })\n                                        .then(res => console.log(\"hellloooooooooo---------\",res))\n                                        .catch(err => console.log(\"Error\", err))\n                                }}>Login</button>\n                        )\n                    }\n                    </Mutation>\n                    <button className=\"forget-btn\" type=\"button\">\n                      Forget Password\n                    </button>\n                  </div>\n                </div>\n              </StyledUserLogin>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}